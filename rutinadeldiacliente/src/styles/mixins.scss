@use "sass:color";
@use "./variables" as v;

// Botón base
@mixin button-base {
  padding: v.$spacing-md v.$spacing-lg;
  border: none;
  border-radius: v.$border-radius;
  font-family: v.$font-family-primary;
  font-size: v.$font-size-lg;
  font-weight: v.$font-weight-semibold;
  cursor: pointer;
  transition: all v.$transition-duration ease;
  box-shadow: v.$shadow-sm;

  &:hover {
    transform: translateY(v.$hover-translate-sm);
    box-shadow: v.$shadow-md;
  }

  &:active {
    transform: translateY(0);
  }
}

// Variantes de botón
@mixin button-primary {
  @include button-base;
  background-color: v.$primary-color;
  color: v.$white;

  &:hover {
    background-color: color.adjust(v.$primary-color, $lightness: -10%);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: v.$secondary-color;
  color: v.$white;

  &:hover {
    background-color: color.adjust(v.$secondary-color, $lightness: -10%);
  }
}

@mixin button-help {
  @include button-base;
  background-color: v.$help-color;
  color: v.$white;

  &:hover {
    background-color: color.adjust(v.$help-color, $lightness: -10%);
  }
}

@mixin button-danger {
  @include button-base;
  background-color: v.$danger-color;
  color: v.$white;

  &:hover {
    background-color: color.adjust(v.$danger-color, $lightness: -10%);
  }
}

// Tarjetas
@mixin card {
  background-color: v.$card-color;
  border-radius: v.$border-radius-lg;
  box-shadow: v.$shadow-md;
  padding: v.$spacing-lg;
  transition: all v.$transition-duration ease;

  &:hover {
    transform: translateY(v.$hover-translate-md);
    box-shadow: v.$shadow-lg;
  }
}

// Contenedor principal
@mixin container {
  max-width: v.$container-max-width;
  margin: 0 auto;
  padding: 0 v.$spacing-md;

  @media (min-width: v.$tablet) {
    padding: 0 v.$spacing-lg;
  }
}

// Centrado flexible
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Grid responsivo
@mixin grid-responsive($columns: 2, $gap: v.$spacing-md) {
  display: grid;
  grid-template-columns: 1fr;
  gap: $gap;

  @media (min-width: v.$mobile) {
    grid-template-columns: repeat($columns, 1fr);
  }
}

// Texto truncado
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
